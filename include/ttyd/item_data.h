#ifndef TTYD_ITEM_DATA_H
#define TTYD_ITEM_DATA_H

#include "ttyd/battle_database_common.h"
#include "ttyd/icondrv.h"

#include <cstdint>

enum class ItemId : int16_t
{
    ITEM_NONE = 0,
    ITEM_STRANGE_SACK,
    ITEM_PAPER_MODE_CURSE,
    ITEM_TUBE_MODE_CURSE,
    ITEM_PLANE_MODE_CURSE,
    ITEM_BOAT_MODE_CURSE,
    ITEM_NORMAL_BOOTS,
    ITEM_SUPER_BOOTS,
    ITEM_ULTRA_BOOTS,
    ITEM_NORMAL_HAMMER,
    ITEM_SUPER_HAMMER,
    ITEM_ULTRA_HAMMER,
    ITEM_CASTLE_KEY_1,
    ITEM_CASTLE_KEY_2,
    ITEM_CASTLE_KEY_3,
    ITEM_CASTLE_KEY_4,
    ITEM_RED_KEY,
    ITEM_BLUE_KEY,
    ITEM_STORAGE_KEY_1,
    ITEM_STORAGE_KEY_2,
    ITEM_GROTTO_KEY,
    ITEM_SHOP_KEY,
    ITEM_STEEPLE_KEY_1,
    ITEM_STEEPLE_KEY_2,
    ITEM_STATION_KEY_1,
    ITEM_STATION_KEY_2,
    ITEM_ELEVATOR_KEY_1,
    ITEM_ELEVATOR_KEY_2,
    ITEM_ELEVATOR_KEY_3,
    ITEM_CARD_KEY_1,
    ITEM_CARD_KEY_2,
    ITEM_CARD_KEY_3,
    ITEM_CARD_KEY_4,
    ITEM_BLACK_KEY_1,
    ITEM_BLACK_KEY_2,
    ITEM_BLACK_KEY_3,
    ITEM_BLACK_KEY_4,
    ITEM_STAR_KEY,
    ITEM_PALACE_KEY_1,
    ITEM_PALACE_KEY_2,
    ITEM_PALACE_KEY_3,
    ITEM_PALACE_KEY_4,
    ITEM_PALACE_KEY_5,
    ITEM_PALACE_KEY_6,
    ITEM_PALACE_KEY_7,
    ITEM_PALACE_KEY_8,
    ITEM_PALACE_KEY_9,
    ITEM_PALACE_KEY_10,
    ITEM_PALACE_KEY_11,
    ITEM_HOUSE_KEY,
    ITEM_MAGICAL_MAP_SMALL,
    ITEM_CONTACT_LENS,
    ITEM_BLIMP_TICKET,
    ITEM_TRAIN_TICKET,
    ITEM_MAILBOX_SP,
    ITEM_SUPER_LUIGI_1,
    ITEM_SUPER_LUIGI_2,
    ITEM_SUPER_LUIGI_3,
    ITEM_SUPER_LUIGI_4,
    ITEM_SUPER_LUIGI_5,
    ITEM_COOK_BOOK,
    ITEM_MOON_STONE,
    ITEM_SUN_STONE,
    ITEM_NECKLACE,
    ITEM_PUNI_ORB,
    ITEM_CHAMPS_BELT,
    ITEM_POISONED_CAKE,
    ITEM_SUPERBOMBOMB,
    ITEM_THE_LETTER_P,
    ITEM_OLD_LETTER,
    ITEM_CHUCKOLA_COLA,
    ITEM_SKULL_GEM,
    ITEM_GATE_HANDLE,
    ITEM_WEDDING_RING,
    ITEM_GALLEY_POT,
    ITEM_GOLD_RING,
    ITEM_SHELL_EARRINGS,
    ITEM_AUTOGRAPH,
    ITEM_RAGGED_DIARY,
    ITEM_BLANKET,
    ITEM_VITAL_PAPER,
    ITEM_BRIEFCASE,
    ITEM_GOLDBOB_GUIDE,
    ITEM_UNUSED_GOLDBOB_GUIDE_RED,
    ITEM_UNUSED_GOLDBOB_GUIDE_BLUE,
    ITEM_COG,
    ITEM_DATA_DISK,
    ITEM_SHINE_SPRITE,
    ITEM_ULTRA_STONE,
    ITEM_BOWSER_UPGRADE_MEAT,
    ITEM_SHADOW_SIRENS_MARIO_POSTER,
    ITEM_SPECIAL_CARD,
    ITEM_PLATINUM_CARD,
    ITEM_GOLD_CARD,
    ITEM_SILVER_CARD,
    ITEM_BOX,
    ITEM_MAGICAL_MAP_LARGE,
    ITEM_DUBIOUS_PAPER,
    ITEM_ROUTING_SLIP,
    ITEM_WRESTLING_MAG,
    ITEM_PRESENT,
    ITEM_BLUE_POTION,
    ITEM_RED_POTION,
    ITEM_ORANGE_POTION,
    ITEM_GREEN_POTION,
    ITEM_UNUSED_STAR_KEY,
    ITEM_LOTTERY_PICK,
    ITEM_BATTLE_TRUNKS,
    ITEM_UP_ARROW,
    ITEM_PACKAGE,
    ITEM_ATTACK_FX_B_IMPORTANT_ITEM,
    ITEM_UNUSED_INVALID_ITEM_1,
    ITEM_UNUSED_INVALID_ITEM_2,
    ITEM_UNUSED_INVALID_ITEM_3,
    ITEM_DIAMOND_STAR,
    ITEM_EMERALD_STAR,
    ITEM_GOLD_STAR,
    ITEM_RUBY_STAR,
    ITEM_SAPPHIRE_STAR,
    ITEM_GARNET_STAR,
    ITEM_CRYSTAL_STAR,
    ITEM_COIN,
    ITEM_PIANTA,
    ITEM_BATTLE_DROP_HEART,
    ITEM_BATTLE_DROP_FLOWER,
    ITEM_STAR_PIECE,
    ITEM_GOLD_BAR,
    ITEM_GOLD_BAR_X3,
    ITEM_THUNDER_BOLT,
    ITEM_THUNDER_RAGE,
    ITEM_SHOOTING_STAR,
    ITEM_ICE_STORM,
    ITEM_FIRE_FLOWER,
    ITEM_EARTH_QUAKE,
    ITEM_BOOS_SHEET,
    ITEM_VOLT_SHROOM,
    ITEM_REPEL_CAPE,
    ITEM_RUIN_POWDER,
    ITEM_SLEEPY_SHEEP,
    ITEM_POW_BLOCK,
    ITEM_STOPWATCH,
    ITEM_DIZZY_DIAL,
    ITEM_POWER_PUNCH,
    ITEM_COURAGE_SHELL,
    ITEM_HP_DRAIN_ITEM,
    ITEM_TRADE_OFF,
    ITEM_MINI_MR_MINI,
    ITEM_MR_SOFTENER,
    ITEM_MUSHROOM,
    ITEM_SUPER_SHROOM,
    ITEM_ULTRA_SHROOM,
    ITEM_LIFE_SHROOM,
    ITEM_DRIED_SHROOM,
    ITEM_TASTY_TONIC,
    ITEM_HONEY_SYRUP,
    ITEM_MAPLE_SYRUP,
    ITEM_JAMMIN_JELLY,
    ITEM_SLOW_SHROOM,
    ITEM_GRADUAL_SYRUP,
    ITEM_HOT_DOG,
    ITEM_CAKE,
    ITEM_POINT_SWAP,
    ITEM_FRIGHT_MASK,
    ITEM_MYSTERY,
    ITEM_INN_COUPON,
    ITEM_WHACKA_BUMP,
    ITEM_COCONUT,
    ITEM_DRIED_BOUQUET,
    ITEM_MYSTIC_EGG,
    ITEM_GOLDEN_LEAF,
    ITEM_KEEL_MANGO,
    ITEM_FRESH_PASTA,
    ITEM_CAKE_MIX,
    ITEM_HOT_SAUCE,
    ITEM_TURTLEY_LEAF,
    ITEM_HORSETAIL,
    ITEM_PEACHY_PEACH,
    ITEM_SPITE_POUCH,
    ITEM_KOOPA_CURSE,
    ITEM_SHROOM_FRY,
    ITEM_SHROOM_ROAST,
    ITEM_SHROOM_STEAK,
    ITEM_MISTAKE,
    ITEM_HONEY_SHROOM,
    ITEM_MAPLE_SHROOM,
    ITEM_JELLY_SHROOM,
    ITEM_HONEY_SUPER,
    ITEM_MAPLE_SUPER,
    ITEM_JELLY_SUPER,
    ITEM_HONEY_ULTRA,
    ITEM_MAPLE_ULTRA,
    ITEM_JELLY_ULTRA,
    ITEM_SPICY_SOUP,
    ITEM_ZESS_DINNER,
    ITEM_ZESS_SPECIAL,
    ITEM_ZESS_DELUXE,
    ITEM_ZESS_DYNAMITE,
    ITEM_ZESS_TEA,
    ITEM_SPACE_FOOD,
    ITEM_ICICLE_POP,
    ITEM_ZESS_FRAPPE,
    ITEM_SNOW_BUNNY,
    ITEM_COCONUT_BOMB,
    ITEM_COURAGE_MEAL,
    ITEM_SHROOM_CAKE,
    ITEM_SHROOM_CREPE,
    ITEM_MOUSSE_CAKE,
    ITEM_FRIED_EGG,
    ITEM_FRUIT_PARFAIT,
    ITEM_EGG_BOMB,
    ITEM_INK_PASTA,
    ITEM_SPAGHETTI,
    ITEM_SHROOM_BROTH,
    ITEM_POISON_SHROOM,
    ITEM_CHOCO_CAKE,
    ITEM_MANGO_DELIGHT,
    ITEM_LOVE_PUDDING,
    ITEM_METEOR_MEAL,
    ITEM_TRIAL_STEW,
    ITEM_COUPLE_SCAKE,
    ITEM_INKY_SAUCE,
    ITEM_OMELETTE_MEAL,
    ITEM_KOOPA_TEA,
    ITEM_KOOPASTA,
    ITEM_SPICY_PASTA,
    ITEM_HEARTFUL_CAKE,
    ITEM_PEACH_TART,
    ITEM_ELECTRO_POP,
    ITEM_FIRE_POP,
    ITEM_HONEY_CANDY,
    ITEM_COCO_CANDY,
    ITEM_JELLY_CANDY,
    ITEM_ZESS_COOKIE,
    ITEM_HEALTHY_SALAD,
    ITEM_KOOPA_BUN,
    ITEM_FRESH_JUICE,
    ITEM_BATTLE_AUDIENCE_CAN,
    ITEM_BATTLE_AUDIENCE_ROCK,
    ITEM_BATTLE_AUDIENCE_BONE,
    ITEM_BATTLE_AUDIENCE_HAMMER,
    ITEM_POWER_JUMP,
    ITEM_MULTI_BOUNCE,
    ITEM_POWER_BOUNCE,
    ITEM_TORNADO_JUMP,
    ITEM_SHRINK_STOMP,
    ITEM_SLEEPY_STOMP,
    ITEM_SOFT_STOMP,
    ITEM_POWER_SMASH,
    ITEM_QUAKE_HAMMER,
    ITEM_HAMMER_THROW,
    ITEM_PIERCING_BLOW,
    ITEM_HEADR_ATTLE,
    ITEM_FIRE_DRIVE,
    ITEM_ICE_SMASH,
    ITEM_DOUBLE_DIP,
    ITEM_DOUBLE_DIP_P,
    ITEM_CHARGE,
    ITEM_CHARGE_P,
    ITEM_SUPER_APPEAL,
    ITEM_SUPER_APPEAL_P,
    ITEM_POWER_PLUS,
    ITEM_POWER_PLUS_P,
    ITEM_P_UP_D_DOWN,
    ITEM_P_UP_D_DOWN_P,
    ITEM_ALL_OR_NOTHING,
    ITEM_ALL_OR_NOTHING_P,
    ITEM_MEGA_RUSH,
    ITEM_MEGA_RUSH_P,
    ITEM_POWER_RUSH,
    ITEM_POWER_RUSH_P,
    ITEM_P_DOWN_D_UP,
    ITEM_P_DOWN_D_UP_P,
    ITEM_LAST_STAND,
    ITEM_LAST_STAND_P,
    ITEM_DEFEND_PLUS,
    ITEM_DEFEND_PLUS_P,
    ITEM_DAMAGE_DODGE,
    ITEM_DAMAGE_DODGE_P,
    ITEM_HP_PLUS,
    ITEM_HP_PLUS_P,
    ITEM_FP_PLUS,
    ITEM_FLOWER_SAVER,
    ITEM_FLOWER_SAVER_P,
    ITEM_ICE_POWER,
    ITEM_SPIKE_SHIELD,
    ITEM_FEELING_FINE,
    ITEM_FEELING_FINE_P,
    ITEM_ZAP_TAP,
    ITEM_DOUBLE_PAIN,
    ITEM_JUMP_MAN,
    ITEM_HAMMER_MAN,
    ITEM_RETURN_POSTAGE,
    ITEM_HAPPY_HEART,
    ITEM_HAPPY_HEART_P,
    ITEM_HAPPY_FLOWER,
    ITEM_HP_DRAIN_BADGE,
    ITEM_HP_DRAIN_BADGE_P,
    ITEM_FP_DRAIN,
    ITEM_FP_DRAIN_P,
    ITEM_CLOSE_CALL,
    ITEM_CLOSE_CALL_P,
    ITEM_PRETTY_LUCKY,
    ITEM_PRETTY_LUCKY_P,
    ITEM_LUCKY_DAY,
    ITEM_LUCKY_DAY_P,
    ITEM_REFUND,
    ITEM_PITY_FLOWER,
    ITEM_PITY_FLOWER_P,
    ITEM_QUICK_CHANGE,
    ITEM_PEEKABOO,
    ITEM_TIMING_TUTOR,
    ITEM_HEART_FINDER,
    ITEM_FLOWER_FINDER,
    ITEM_MONEY_MONEY,
    ITEM_ITEM_HOG,
    ITEM_ATTACK_FX_R,
    ITEM_ATTACK_FX_B,
    ITEM_ATTACK_FX_G,
    ITEM_ATTACK_FX_Y,
    ITEM_ATTACK_FX_P,
    ITEM_CHILL_OUT,
    ITEM_FIRST_ATTACK,
    ITEM_BUMP_ATTACK,
    ITEM_SLOW_GO,
    ITEM_SIMPLIFIER,
    ITEM_UNSIMPLIFIER,
    ITEM_LUCKY_START,
    ITEM_L_EMBLEM,
    ITEM_W_EMBLEM,
    ITEM_TRIPLE_DIP,
    ITEM_LUCKY_START_P, // Has the icon for Lucky Start
    ITEM_DEBUG_BADGE,
    ITEM_MEGA_JUMP,
    ITEM_MEGA_SMASH,
    ITEM_MEGA_QUAKE,
    ITEM_UNKNOWN_BADGE_DAMAGE_DODGE,
    ITEM_UNKNOWN_BADGE_DAMAGE_DODGE_P,
    ITEM_SUPER_CHARGE,
    ITEM_SUPER_CHARGE_P,
};

struct ItemData
{
    const char *itemStringId; // Used for recipe lookups, etc.
    const char *itemNameMsg;
    const char *itemDescMsg;
    const char *itemDescMenuMsg;
    uint16_t unk_0x10;
    int16_t typeSortOrder; // For "By Type" ordering
    int16_t buyPrice;
    int16_t discountPrice;
    int16_t starPiecePrice;
    int16_t sellPrice;
    int8_t bpCost;
    int8_t hpRestored;
    int8_t fpRestored;
    uint8_t unk_0x1f;
    IconId iconId;
    uint16_t unk_0x22;
    BattleWeapon *weapon_params;
} __attribute__((__packed__));

static_assert(sizeof(ItemData) == 0x28);

inline bool itemIsValid(ItemId item)
{
    return (item > ItemId::ITEM_NONE) && (item <= ItemId::ITEM_SUPER_CHARGE_P);
}

extern "C"
{
    extern ItemData itemDataTable[340];
}

#endif
